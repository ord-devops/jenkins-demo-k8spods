def dockerlogin = ""

pipeline {
    agent {
        kubernetes {
            label "php"
            containerTemplate {
                name 'php'
                image 'php:7.2.1-apache'
                ttyEnabled true
                command 'cat'
            }
        }
      }
    }
    options {
      buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '2'))
    }
    stages {
        stage("Build") {
            steps {
              sh "apt-get update && apt-get install -y git zip unzip"
              sh "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
              sh "cd demoapp && composer install"
            }
        }
        stage("Archive artifacts") {
            steps {
                archive includes: "demoapp"
                stash name: "artifacts", includes: "demoapp"
            }
        }
        stage("Create Docker image")
          agent {
            kubernetes {
              containerTemplate {
                label "docker"
                containerTemplate {
                  name "docker"
                  image "docker:stable"
                }
              }
            }
          }
          environment {
            DOCKER_LOGIN = credentials("docker-login")
          }
          steps {
            unstash name: 'artifacts'
            sh "docker build -t docker.io/${env.DOCKER_LOGIN_USR}/demoapp:1.0 ."
            sh "docker login -u  "${env.DOCKER_LOGIN_USR} -p "${env.DOCKER_LOGIN_PSW}
            sh "docker push"
          }
          stage("Deploy app to kubernetes") {
            steps {
              // sh "kubectl apply -f demoapp-deployment.yaml"
            }
          }
        }
    }
}
